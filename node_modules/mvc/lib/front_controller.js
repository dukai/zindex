//import modules
var url = require('url'),
    stringUtils = require('./utils/string'),
    fs = require('fs'),
    path = require('path'),
    route = require('./route'),
    Intent = require('./intent'),
    oo = require('./utils/oo');


var FrontController = function(options){
    this._initFrontController(options);
};

FrontController.prototype = {
    _initFrontController: function(options){
        this.options = {
            config: {},
            intent: {}
        };
        this.options = oo.mix(this.options, options);
    },
    /**
     * 根据给定的文件名判断是否为文件
     * @param fileName
     * @param callback
     */
    isFile: function(fileName, callback){
        fs.stat(fileName, function(err, stats){
            var status = false;
            if(!err && stats.isFile()){
                status = true;
            }

            callback(status, stats, fileName);
        });

    },

    route: function(){
        var self = this;
        var fileName = this.options.config.file_path + this.options.intent.request.url;
        this.isFile(fileName, function(status, stats, fname){
            if(status){
                self.responseFile(fname, stats);
            }else{
                route.addRoutes(self.options.config.routes);
                route.dispatch(self.options.intent);
            }
        })
    },

    responseFile: function(fileName, stats){
        var self = this;
        var ext = stringUtils.trim(path.extname(fileName), '\\.');
        var mimeTypes = require('./MIME').types;

        var data = fs.readFileSync(fileName, 'binary')
        self.options.intent.response.writeHead(200,
            {
                'Content-Type': mimeTypes[ext],
                'filename': fileName,
                'ext': ext,
                'Date': new Date(),
                'Cache-Control': 'max-age=600000',
                'Expires': new Date(new Date().getTime() + 86400000),
                'Last-Modified': stats.mtime
            });
        self.options.intent.response.end(data, 'binary');
    }
}

module.exports = FrontController;
