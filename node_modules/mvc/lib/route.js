var stringUtil = require('./utils/string'),
	url = require('url'),
	oo = require('./utils/oo'),
    fs = require('fs'),
    Config = require('./config');
var routesList = [];

var Route = function(Options){
	this._initRoute(Options);
}

Route.prototype = {
	_initRoute:function(options){
        this.options = options;
		this._url = stringUtil.trim(options.url, Route.URL_TRIM);

        this.reset(options);

	},

    reset: function(options){
        this._controller = options.controller || 'index';
        this._action = options.action || 'index';
        this._module = options.module || 'default';
        this._params = {};
        this._parts = [];
        this._variables = [];
	    this._partsLength = 0;

        var routePieces = this._url.split(Route.URL_DELIMITER);
        this._length = routePieces.length;


        for(var i = 0, len = routePieces.length; i < len; i++){
            var result = routePieces[i].match(Route.URL_VARIABLE);
            if(result){
                this._parts[i] = null;
                this._variables[i] = result[1];

            }else{
                this._parts[i] = routePieces[i];
	            this._partsLength++;
            }
        }
    },


	match: function(path){
        this.reset(this.options);
		path = stringUtil.trim(path, Route.URL_TRIM);
		var pathPieces = path.split(Route.URL_DELIMITER);
		if(pathPieces.length < this._partsLength){
			return false;
		}
		/*
		//debug info
		console.log(pathPieces);
		console.log(this._variables);
		console.log(this._parts);
		*/
		var len = pathPieces.length > this._parts.length ? pathPieces.length : this._parts.length;
		for(var i = 0; i < len; i++){
			var key = this._variables[i] ? this._variables[i] : null;
			var pathPart = decodeURIComponent(pathPieces[i]);
			if(key === null && pathPart != this._parts[i]){
				return false;
			}

			if(key != null){
				this._params[key] = pathPart;
				if(key == 'controller' || key == 'action' || key == 'module'){
					if(!!pathPart){
						this['_' + key] = pathPart;
					}

				}
			}
		}

		return true;
	},

	getController: function(){
		return this._controller;
	},

	getAction: function(){
		return this._action;
	},

    getParams: function(){
        return this._params;
    }
}

Route.URL_VARIABLE = /{(\w+)}/;
Route.URL_DELIMITER = /[\/\.]/;
Route.URL_TRIM = '[\/\.]';

exports.Route = Route;

exports.addRoutes = function(configs){
	for(var i = 0, len = configs.length; i < len; i++){
		routesList.push(new Route(configs[i]));
	}
}

var match = function(path){
	for(var i = 0, len = routesList.length; i < len; i++){
		if(routesList[i].match(path)){
			return routesList[i];
		}
	}

	return false;
}
/**
 * 分析URL地址，返回分析结果
 * @param urlStr
 * @returns {*}
 */
var parseURL = function(urlStr){
	var urlEntity = url.parse(urlStr, true);
	var pathName = urlEntity.pathname;
	var query = urlEntity.query;

	var routeResult = match(pathName);
	routeResult._params = oo.mix(routeResult._params, query);
	return routeResult;
};
/**
 *
 * @param intent {controllerName, actionName, request, response, params}
 */
var forward = exports.forward = function(intent){
    var controllerPath = getControllerPath(Config.app_path, intent.controllerName);
    try{
        var RefController = require(controllerPath);
        new RefController(intent).run();
    }catch(ex){
        intent.params = {message: 'Controller NOT Found!', info: {
            controllerName: intent.controllerName,
            actionName: intent.actionName
        }};
        intent.controllerName = 'error'
        intent.actionName = 'index';
        intent.statusCode = 404;
        forward(intent);
    }
}

var getControllerPath = function(appPath, controllerName){
    return appPath + '/controllers/' + stringUtil.dashToUnderScore(controllerName) + '_controller.js'
}


exports.dispatch = function(intent){
    var routeResult = parseURL(intent.url);
    if(!routeResult){
        intent.controllerName = "error";
        intent.actionName = "index";
        intent.statusCode = 404;
        intent.params = {message: 'NO Matched Route!', info: {
        }};

    }else{
        intent.controllerName = routeResult.getController();
        intent.actionName = routeResult.getAction();
        intent.params = routeResult.getParams();
        intent.statusCode = 200;
    }

    forward(intent);
};