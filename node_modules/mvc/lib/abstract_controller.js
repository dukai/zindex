var stringTools = require('./utils/string'),
    formidable = require('formidable'),
    View = require('./view'),
	MysqlDatabase = require('./mysql-database'),
    Config = require('./config');

var AbstractController = function(intent){
	this._initAbstractController(intent);
};

AbstractController.prototype = {
	/**
	 * initialize controller, abstract method
	 * @private
	 */
	_init: function(){
	},

	_initAbstractController: function(intent){
        this.intent = intent;
		this.renderScriptStatus = true;
		this.request = intent.request;
		this.response = intent.response;
		this.params = intent.params;
		this.controllerName = intent.controllerName;
		this.actionName = stringTools.dashToCamel(intent.actionName) + 'Action';
		this.view = new View(intent);
		this.db = null;
		this._init();
	},
	run: function(){
		if(this[this.actionName]){
			this[this.actionName]();
			this.renderScriptStatus && this.render();
		}else{
			this.response.writeHead(404, {'Content-Type': 'text/html; charset=utf-8'});
            this.response.end("<h1>Controller NOT Found!</h1><hr />Powered by dk");
		}
	},
	render: function (){
		var self = this;
		this.view.renderScript(function(viewContent){
			self.response.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'});
			self.response.end(viewContent);
		});
	},

	json: function(content){
		this.response.writeHead(200, {'Content-Type': 'application/json;charset=utf-8'})
		this.response.end(content);
	},

	getDb: function(){
		if(!this.db){
			this.db = MysqlDatabase.getInstance(Config.db);
		}
		return this.db;
	},

	setNoRender: function(){
		this.renderScriptStatus = false;
	},
    /**
     * 设置Header
     * @param name
     * @param value
     */
    setHeader: function(name, value){
        this.response.setHeader(name, value);
    },
    /**
     * 获取原始POST数据
     * @param callback(error, data)
     */
    getRawPost: function(callback){
        if(this.request.method == "POST"){
            var postData = '';
            this.request.addListener('data', function(chunk){
                postData += chunk;
            });

            this.request.addListener('end', function(){
                callback(null, postData);
            });
        }else{
            callback('NOT POST', null);
        }
    },
    /**
     * 获取表单数据
     * @param callback(err, fields, files)
     */
    getPost: function(callback){
        if(this.request.method == "POST"){
            var form = new formidable.IncomingForm();
            form.parse(this.request, function(err, fields, files) {
                callback(err, fields, files);
            });
        }else{
            callback('NOT POST', null, null);
        }

    },

	getParam: function(key, defaultValue){
		if(this.params[key]){
			return this.params[key];
		}else{
			return defaultValue;
		}
	},

    forward: function(){

    },

    redirect: function(url){
        this.response.writeHead(302, {
            'Location': url
        });
        this.response.end();

    }
};

module.exports = AbstractController;
